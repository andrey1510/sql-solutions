-- https://www.w3resource.com/sql-exercises/joins-hr/index.php

-- 1. Find the first name, last name, department number, and department name for each employee.

SELECT 
  e.first_name, 
  e.last_name, 
  e.department_id, 
  d.department_name 
FROM 
  employees e 
  INNER JOIN departments d ON e.department_id = d.department_id;


-- 2. Find the first name, last name, department, city, and state province for each employee.

SELECT 
  e.first_name, 
  e.last_name, 
  d.department_name, 
  l.city, 
  l.state_province 
FROM 
  employees e 
  INNER JOIN departments d ON e.department_id = d.department_id 
  INNER JOIN locations l ON d.location_id = l.location_id;


-- 3. Find the first name, last name, salary, and job grade for all employees.

SELECT 
  e.first_name, 
  e.last_name, 
  e.salary, 
  j.grade_level 
FROM 
  employees e 
  INNER JOIN job_grades j ON e.salary 
    BETWEEN j.lowest_sal AND j.highest_sal;

-- 4. Find all those employees who work in department ID 80 or 40. Return first name, last name, department number and department name.

SELECT 
  e.first_name, 
  e.last_name, 
  e.department_id, 
  d.department_name 
FROM 
  employees e 
  INNER JOIN departments d ON e.department_id = d.department_id AND e.department_id IN (80, 40) 
ORDER BY 
  last_name;


-- 5. Find those employees whose first name contains the letter ‘z’. Return first name, last name, department, city, and state province.

SELECT 
  e.first_name, 
  e.last_name, 
  d.department_name, 
  l.city, 
  l.state_province 
FROM 
  employees e 
  INNER JOIN departments d ON e.department_id = d.department_id 
  INNER JOIN locations l ON d.location_id = l.location_id 
WHERE 
  first_name LIKE '%z%';


-- 6. Find all departments, including those without employees. Return first name, last name, department ID, department name.

SELECT 
  e.first_name, 
  e.last_name, 
  d.department_id, 
  department_name 
FROM 
  employees e 
  RIGHT JOIN departments d ON e.department_id = d.department_id;


-- 7. Find the employees who earn less than the employee of ID 182. Return first name, last name and salary.

SELECT 
  e.first_name, 
  e.last_name, 
  e.salary 
FROM 
  employees e 
  INNER JOIN employees s ON e.salary < s.salary AND s.employee_id = 182;


-- 8. Find the employees and their managers. Return the first name of the employee and manager.

SELECT 
  e.first_name AS "Employee Name", 
  m.first_name AS "Manager" 
FROM 
  employees e 
  INNER JOIN employees m ON e.manager_id = m.employee_id;


-- 9. Find out which employees have or do not have a department. Return first name, last name, department ID, department name.

SELECT 
  d.department_name, 
  l.city, 
  l.state_province 
FROM 
  departments d 
  INNER JOIN locations l ON d.location_id = l.location_id;


-- 10. Find out which employees have or do not have a department. Return first name, last name, department ID, department name.

SELECT 
  e.first_name, 
  e.last_name, 
  e.department_id, 
  d.department_name 
FROM 
  employees e 
  LEFT JOIN departments d ON e.department_id = d.department_id;


-- 11. Find the employees and their managers. Those managers do not work under any manager also appear in the list. Return the first name of the employee and manager.

SELECT 
  e.first_name AS "Employee Name", 
  m.first_name AS "Manager" 
FROM 
  employees e
  LEFT JOIN employees m ON e.manager_id = m.employee_id;


-- 12. Find the employees who work in the same department as the employee with the last name Taylor. Return first name, last name and department ID.

SELECT
  e.first_name,
  e.last_name,
  e.department_id
FROM
  employees e
  INNER JOIN employees d ON e.department_id = d.department_id 
    AND d.last_name = 'Taylor';


-- 13. Find all employees who joined on or after 1st January 1993 and on or before 31 August 1997. Return job title, department name, employee name, and joining date of the job.

SELECT 
  job_title, 
  department_name, 
  first_name || ' ' || last_name AS Employee_name, 
  start_date 
FROM 
  job_history 
  INNER JOIN jobs USING (job_id) 
  INNER JOIN departments USING (department_id) 
  INNER JOIN employees USING (employee_id) 
WHERE 
  start_date >= '1993-01-01' AND start_date <= '1997-08-31';


-- 14. Calculate the difference between the maximum salary of the job and the employee's salary. Return job title, employee name, and salary difference.

SELECT 
  job_title,
  first_name || ' ' || last_name AS Employee_name, 
  max_salary - salary AS salary_difference
FROM 
  employees
  INNER JOIN jobs USING (job_id);


-- 15. Calculate the average salary, the number of employees receiving commissions in that department. Return department name, average salary and number of employees.

SELECT 
  department_name, 
  AVG(salary), 
  COUNT(commission_pct) 
FROM 
  departments 
  INNER JOIN employees USING (department_id) 
GROUP BY 
  department_name;


-- 16. Calculate the difference between the maximum salary and the salary of all the employees who work in the department of ID 80. Return job title, employee name and salary difference.

SELECT 
  job_title, 
  first_name || ' ' || last_name AS Employee_name, 
  max_salary - salary AS salary_difference 
FROM 
  employees 
  INNER JOIN jobs USING(job_id)
WHERE 
  department_id = 80;


-- 17. Find the name of the country, city, and departments, which are running there.

SELECT 
  country_name, 
  city, 
  department_name 
FROM 
  countries 
  INNER JOIN locations USING (country_id) 
  INNER JOIN departments USING (location_id);


-- 18. Find the department name and the full name (first and last name) of the manager.

SELECT 
  d.department_name, 
  first_name || ' ' || last_name AS name_of_manager 
FROM 
  departments d 
  INNER JOIN employees e ON (d.manager_id = e.employee_id);


-- 19. Calculate the average salary of employees for each job title.

SELECT 
  job_title, 
  AVG(salary) 
FROM 
  employees  
  INNER JOIN jobs USING (job_id)
GROUP BY 
  job_title;


-- 20. Find the employees who earn $12000 or more. Return employee ID, starting date, end date, job ID and department ID.

SELECT 
  jh.employee_id,
  jh.start_date,
  jh.end_date,
  jh.job_id,
  jh.department_id
FROM 
  job_history jh 
  INNER JOIN employees e ON (jh.employee_id = e.employee_id)
WHERE 
  e.salary >= 12000;


-- 21. Find out which departments have at least two employees. Group the result set on country name and city. Return country name, city, and number.

SELECT 
  country_name, 
  city, 
  COUNT(department_id) 
FROM 
  countries 
  INNER JOIN locations USING(country_id) 
  INNER JOIN departments USING(location_id) 
WHERE 
  department_id IN (
    SELECT 
      department_id 
    FROM 
      employees 
    GROUP BY 
      department_id 
    HAVING 
      COUNT(department_id)>= 2
  ) 
GROUP BY 
  country_name, 
  city;


-- 22. Find the department name, full name (first and last name) of the manager and their city.

SELECT 
  department_name, 
  first_name || ' ' || last_name AS name_of_manager, 
  city 
FROM 
  departments d 
  INNER JOIN employees e ON (d.manager_id = e.employee_id) 
  INNER JOIN locations l ON (d.location_id = l.location_id);


-- 23. Calculate the number of days worked by employees in a department of ID 80. Return employee ID, job title, number of days worked.

SELECT 
  employee_id, 
  job_title, 
  end_date - start_date AS Days 
FROM 
  job_history  
  INNER JOIN jobs USING (job_id)
WHERE 
  department_id = 80;


-- 24. Find full name (first and last name), and salary of all employees working in any department in the city of London.

SELECT 
  first_name || ' ' || last_name AS Employee_name, 
  salary
FROM 
  employees 
  INNER JOIN departments USING (department_id) 
  INNER JOIN locations USING (location_id) 
WHERE
  city = 'London';


-- 25. Find full name (first and last name), job title, start and end date of last jobs of employees who did not receive commissions.

SELECT 
  CONCAT(e.first_name, ' ', e.last_name) AS Employee_name, 
  j.job_title, 
  h.* 
FROM 
  employees e 
  JOIN (
    SELECT 
      MAX(start_date), 
      MAX(end_date), 
      employee_id 
    FROM 
      job_history 
    GROUP BY 
      employee_id
  ) h ON e.employee_id = h.employee_id 
  JOIN jobs j ON j.job_id = e.job_id 
WHERE 
  e.commission_pct = 0;


-- 26. Find the department name, department ID, and number of employees in each department.

SELECT 
  d.department_name, 
  e.* 
FROM 
  departments d 
  JOIN (
    SELECT 
      count(employee_id), 
      department_id 
    FROM 
      employees 
    GROUP BY 
      department_id
  ) e USING (department_id);


-- 27. Find out the full name (first and last name) of the employee with an ID and the name of the country where he/she is currently employed.

SELECT 
  first_name || ' ' || last_name AS Employee_name, 
  employee_id, 
  country_name 
FROM 
  employees 
  JOIN departments USING(department_id) 
  JOIN locations USING(location_id) 
  JOIN countries USING (country_id);



